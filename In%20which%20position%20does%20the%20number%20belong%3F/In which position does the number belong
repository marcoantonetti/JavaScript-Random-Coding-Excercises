/*Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted. 
The returned value should be a number.*/

function getIndexToIns(arr, num) {
    
    arr.sort((a,b) => a-b)

    let bool = true
    let i = 0

    arr.forEach((element,index) => {

     if (num <= element && bool){
        bool = false
        i = index

      } else if ( index == arr.length - 1 && bool){
        i = index + 1
        
      }
    })

    return i;
} 

// Second solution using buil-in methods like filter

function getIndexToIns(arr, num) {
    
    arr.sort((a,b) => a-b)

    let index = arr.filter((element) => num > element).length

    return index
} 










/*

getIndexToIns([10, 20, 30, 40, 50], 35) should return 3.

getIndexToIns([10, 20, 30, 40, 50], 35) should return a number.

getIndexToIns([10, 20, 30, 40, 50], 30) should return 2.

getIndexToIns([10, 20, 30, 40, 50], 30) should return a number.

getIndexToIns([40, 60], 50) should return 1.

getIndexToIns([40, 60], 50) should return a number.

getIndexToIns([3, 10, 5], 3) should return 0.

getIndexToIns([3, 10, 5], 3) should return a number.

getIndexToIns([5, 3, 20, 3], 5) should return 2.

getIndexToIns([5, 3, 20, 3], 5) should return a number.

getIndexToIns([2, 20, 10], 19) should return 2.

getIndexToIns([2, 20, 10], 19) should return a number.

getIndexToIns([2, 5, 10], 15) should return 3.

getIndexToIns([2, 5, 10], 15) should return a number.

getIndexToIns([], 1) should return 0.

getIndexToIns([], 1) should return a number. */
